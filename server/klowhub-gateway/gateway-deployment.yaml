apiVersion: apps/v1
kind: Deployment
metadata:
  name: gateway
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gateway
  template:
    metadata:
      labels:
        app: gateway
    spec:
      containers:
        - name: gateway
          image: gcr.io/wired-climate-442121-i1/gateway:latest
          ports:
            - containerPort: 3000 # Puerto configurado en el gateway
          envFrom:
            - configMapRef:
                name: env-gateway-config
---
apiVersion: v1
kind: Service
metadata:
  name: gateway-service
spec:
  selector:
    app: gateway
  type: LoadBalancer
  ports:
    - protocol: TCP
      port: 443
      targetPort: 3000
---
apiVersion: v1
kind: Service
metadata:
  name: gateway-service-cluster
spec:
  type: ClusterIP
  selector:
    app: gateway
  ports:
  - protocol: TCP
    port: 3000
    targetPort: 3000
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: env-gateway-config
data:
  PORT: '3000'
  HOST: gateway-service.default.svc.cluster.local
  USERS_MICROSERVICE_HOST: users-ms-service.default.svc.cluster.local
  USERS_MICROSERVICE_PORT: '3001'
  APPS_MICROSERVICE_HOST: apps-ms-service.default.svc.cluster.local
  APPS_MICROSERVICE_PORT: '3002'
  COURSES_MICROSERVICE_HOST: courses-ms-service.default.svc.cluster.local
  COURSES_MICROSERVICE_PORT: '3004'
  ORDERS_MICROSERVICE_HOST: ordes-ms-service.default.svc.cluster.local
  ORDERS_MICROSERVICE_PORT: '3005'
  PAYMENTS_MICROSERVICE_HOST: payments-ms-service.default.svc.cluster.local
  PAYMENTS_MICROSERVICE_PORT: '3006'
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-all-traffic
  namespace: default
spec:
  podSelector: {}  # Aplica a todos los pods
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - podSelector: {}
    - ipBlock:
        cidr: 0.0.0.0/0  # Permitir tráfico desde cualquier IP (interno y externo)
  egress:
  - to:
    - podSelector: {}
    - ipBlock:
        cidr: 0.0.0.0/0  # Permitir tráfico hacia cualquier IP (interno y externo)
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: gateway-ingress
  annotations:
    kubernetes.io/spec.ingressClassName: "gce" 
    # networking.gke.io/managed-certificates: "gateway-cert"
spec:
  tls:
    - hosts:
        - klowhubback.hopto.org
      secretName: gateway-tls-secret
  rules:
    - host: klowhubback.hopto.org
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: gateway-service
                port:
                  number: 443 
---

# apiVersion: networking.gke.io/v1
# kind: ManagedCertificate
# metadata:
  # name: gateway-cert
# spec:
  # domains:
    # - klowhubback.hopto.org