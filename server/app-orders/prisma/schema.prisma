generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum PAYMENT_STATUS {
  PENDING
  SUCCESS
  FAILED
}

enum ORDERSTATUS {
  PENDING
  COMPLETED
  CANCELLED
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  orders Order[]

  @@map("users")
}

model Product {
  id          String   @id @default(cuid())
  name        String
  description String
  price       Float
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  order OrderProduct[]

  @@map("products")
}

model Order {
  id         String      @id @default(cuid())
  userId     String
  totalPrice Float
  status     ORDERSTATUS @default(PENDING)
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt

  user     User           @relation(fields: [userId], references: [id])
  products OrderProduct[]
  payment  Payment?

  @@map("orders")
}

model OrderProduct {
  id        String @id @default(cuid())
  orderId   String
  productId String
  quantity  Int    @default(1)

  order   Order   @relation(fields: [orderId], references: [id])
  product Product @relation(fields: [productId], references: [id])

  @@map("order_products")
}

model Payment {
  id              String        @id @default(cuid())
  orderId         String        @unique // Cada Payment está asociado a una única Order.
  amount          Float
  status          PAYMENT_STATUS @default(PENDING)
  paymentIntentId String?
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt

  order Order @relation(fields: [orderId], references: [id])

  @@map("payments")
}
