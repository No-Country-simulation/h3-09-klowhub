// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum CourseType {
  COURSE
  LESSON
}

enum Platform {
  APPSHEET
  POWERAPPS
}

enum ContentType {
  FREE
  PAID
}

model Course {
  id                  String      @id @default(uuid())
  title               String
  photo               String[]
  shortDescription    String
  price               Float
  functionalities     String[]
  language            String
  sector              String
  toolsAndPlatforms   String[]
  contentType         ContentType
  courseType          CourseType
  level               String
  contentPillar       String
  learningOutcomes    String[]
  prerequisites       String[]
  detailedDescription String
  approved            Boolean     @default(false)
  available           Boolean     @default(true)
  creator             String
  module              Module[] // One-to-many relationship with Module
  moduleId            String?

  @@map("courses") // Name of the table in the database
}

model Section {
  id           String     @id @default(uuid())
  titleSection String
  moduleId     String
  order        Int
  module       Module     @relation(fields: [moduleId], references: [id]) // Relationship with Module
  resources    Resource[] // One-to-many relationship with Resource

  @@map("sections") // Name of the table in the database
}

model Resource {
  id        String  @id @default(uuid())
  sectionId String
  extra     Boolean
  section   Section @relation(fields: [sectionId], references: [id]) // Relationship with CourseSection

  @@map("resources") // Name of the table in the database
}

model Module {
  id       String    @id @default(uuid())
  courseId String
  order    Int
  course   Course    @relation(fields: [courseId], references: [id])
  section  Section[] // One-to-many relationship with CourseSection

  @@map("modules") // Name of the table in the database
}
